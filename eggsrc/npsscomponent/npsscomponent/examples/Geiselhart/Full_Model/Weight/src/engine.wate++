// Copied from Scott Jones' GTF wate++ file.


WATEassembly WATE {
  
//=================================================
//                  WATE CONTROLS
//=================================================

   // Vary the mean radius of Bypass Duct so that its O.D. matches the splitter's 
   Independent ind_1 {
      varName = "WATE_bypassDuct.meanRadius_in";
      autoSetup = TRUE;
   }
   Dependent dep_1 {
      eq_lhs = "WATE_bypassDuct.outPort.outerRadius";
      eq_rhs = "WATE_splitter.inPort.outerRadius";
      tolerance = 0.0005;
      autoSetup = TRUE;
   }

   // Vary HPC speed factor so that HPC work factor is 0.2802
   /*  Independent ind_2 {
      varName = "WATE_HPC.s_Nmech";
      autoSetup = TRUE;
   }
   Dependent dep_2 {
      eq_lhs = "WATE_HPC.workFactor_stg[0]";
      eq_rhs = "0.2802";
      tolerance = 0.0005;
      autoSetup = TRUE;
   }*/
   DSV LPTStageCount {
     allowedValues = {"2","3","4","5"}
     stateInitial = "3";
     autoSetup = TRUE;
     //controlBounce = TRUE;
   }
   

   // Vary HPT loading so that HPT exit O.D. matches LPT inlet O.D. 
   Independent ind_3 {
     varName = "WATE_HPT.loadingParam";
     autoSetup = TRUE;
   }
   Dependent dep_3 {
      eq_lhs = "WATE_HPT.outPort.outerRadius";
      eq_rhs = "WATE_LPT.inPort.outerRadius";
      tolerance = 0.0005;
      autoSetup = TRUE;
   }

   // Vary L/D of the bypass duct so that bypass duct exit length (axial)
   //    is equal to the entrance location of the mixer 
   Independent ind_4 {
      varName = "WATE_bypassDuct.lengthHeightRatio";
      autoSetup = TRUE;
   }
   Dependent dep_4 {
      eq_lhs = "WATE_bypassDuct.outPort.axialPosition";
      eq_rhs = "WATE_mixer.innerInPort.axialPosition";
      tolerance = 0.0005;
      autoSetup = TRUE;
   }
   // Vary core nozzle exit outer radius so that it is the same as nozzle
   //      inlet radius
   /*Independent ind_5 {
      varName = "WATE_Nozzle.exitArea_in";
      autoSetup = TRUE;
   }
   Dependent dep_5 {
      eq_lhs = "WATE_Nozzle.outPort.outerRadius";
      eq_rhs = "WATE_Nozzle.inPort.outerRadius";
      tolerance = 0.0005;
      autoSetup = TRUE;
   }*/


  //=================================================
  //                     FAN
  //=================================================
  WATEfan WATE_fan {
    componentRef = "fan";
    numContainedStages = 2;
    MNin = 0.575;
    MNout = 0.5;
    stg1MaxPR = 1.8;
    hubTipRatioIn = 0.37;
    //numBlades_in = 21;
    calcStatorWt = TRUE;
    
    
    bladeMaterial.type = "Ti_17";
    statorMaterial.type = "Ti_6Al_4v";
    //real bladeMaterial.rho(real) { return 0.096; }
    //real bladeMaterial.sy(real) { return 50000.; }
    //real bladeMaterial.su(real) { return 50000.; }
    //real statorMaterial.rho(real) { return 0.1; }
    real containmentMaterial.rho(real) { return 0.056; }
    
    bladeSolidity = 1.1;
    bladeVolumeFactor = 0.1;
    stg1BladeAR = 2.26;
    lastStgBladeAR = 1.94;
    bladeTaperRatio = 1;
    maxSpdRatio_in = 1.000;
    //s_Nmech = 1.118;
    geometryType = "ConstTipRadius";
    radiusChangeStg = 1;
    //numStatorBlades_in = 44;
    statorSolidity = 0.88;
    statorVolumeFactor = 0.109;
    stg1StatorAR = 2.86;
    lastStgStatorAR = 2.65;

    //RSlenRatioBypass = 1.00;
    real caseMaterial.rho(real) { return 0.168; }
    real igvMaterial.rho(real) { return 0.1; }
    
    Table TB_PRvsTipSpd(real pratio) {
    pratio = {   1., 1.18, 1.36, 1.43, 1.503, 1.581, 1.667, 1.775, 1.9 }
    utip   = { 600., 885.,1100.,1200., 1300., 1400., 1500., 1600.,1700. }
    }
    WATEdiskMTC S_Disk {
      shape1 = "RING"; //"OPTIMUM";
      shape2 = "WEB"; //"OPTIMUM";
      shape2StartStg = 2;
      material.type = "Ti_17";
      shaftRef = "WATE_LP_Shaft";
    }
    /*WATEframeCustom S_RearFrame {
      isFrontFrame = FALSE;
      material.type = "Ti_6Al_4v";
      supportMaterial.type = "Ti_6Al_4v";
      //real material.rho(real) { return 0.1; }
      //real supportMaterial.rho(real) { return 0.1; }
      volumeFactor = 0.05;
      aspectRatio_in = 2.50;
      supportThickness = 0.1;
      gapFrameLengthRatio = 1;
      numBlades_in = 21;
      //passThruComp = "WATE_coreFanDuct";
      connectPoint = "REAR";
      rearBearingRef = "WATE_LP_Shaft.bearing1";
      
      WATEtowerShaft S_TowerShaft {
        HPX = 200;
        //diamRatio = 0.9;
      }
    }*/
  }
  
  //=================================================
  //                     SPLITTER
  //=================================================
  WATEsplitter WATE_splitter {
    componentRef = "split";
  }
  
  //=================================================
  //                 coreDUCT
  //=================================================
  WATEductBase WATE_coreDuct {
    componentRef = "coreDuct";
    MNin_in = 0.549;
    lengthHeightRatio = 6;
    //length = 10.4;
    radiusSettingPort = "WATE_splitter.outPortPrimary";
    //outerRR = 1.1;
    real material.rho(real) { return 0.1; }

    WATEframeCustom S_Frame {
      aspectRatio_in = 0.40;
      material.type ="Ti_6Al_4v";
      supportMaterial.type ="Ti_6Al_4v";
      volumeFactor = 0.1;
      supportThickness = 0.25;
      gapFrameLengthRatio = 0.2;
 //     numBlades_in = 54;
      passThruComp = "WATE_bypassDuct";
      connectPoint = "REAR";
      frontBearingRef = "WATE_LP_Shaft.bearing2";
      rearBearingRef = "WATE_HP_Shaft.bearing3";
      
   }

  }  
  
  //=================================================
  //                       HPC
  //=================================================
  WATEaxialHPC WATE_HPC {
    componentRef = "HPC";
    //numStages_in = 6;
    igvType = "VARIABLE";
    MNin = 0.522;
    MNout = 0.31;
    stg1MaxPR = 1.6;
    outletInletRR = 1.0;
    hubTipRatioIn = 0.8214;
    bladeMaterial.type = "Ti_17";
    bladeSolidity = 0.84;
    bladeVolumeFactor = 0.163;
    stg1BladeAR = 2.;
    lastStgBladeAR = 1.7;
    maxSpdRatio_in = 1;
    //s_Nmech = 0.9735;
    //minHubRadius = 6;  // error: in WATE++ this overrides hub/tip ratio
    geometryType = "ConstTipRadius";
    radiusChangeStg = 1;
    statorSolidity = 0.75;
    statorVolumeFactor = 0.164;
    stg1StatorRotorLR = 1.;
    lastStgStatorRotorLR = 1.;
    stg1StatorAR = 2.5;
    lastStgStatorAR = 0.5;
    //numVariableStages = 3;
    caseMaterial.type ="Udimet_500";
    igvMaterial.type = "Ti_17";
    bladeMaterial2StartStg = 5;
    statorMaterial2StartStg = 5;
    //stg1NcTip = 1393.6;
    outerCaseMaterial.type = "Ti_17";
    bladeMaterial2.type = "Inconel_718";
    statorMaterial.type = "Ti_17";
    statorMaterial2.type = "Inconel_718";
    avgLenPerStg = 2.586;
    
    
    Table TB_PRvsTipSpd(real pratio) {
    pratio = {   1., 1.18, 1.36, 1.43, 1.503, 1.581, 1.667, 1.775, 1.9 }
    utip   = { 600., 885.,1100.,1200., 1300., 1400., 1500., 1600.,1700. }
    }
    WATEdiskMTC S_Disk {
      shape1 = "WEB";
      shape2 = "WEB";
      material.type = "Ti_17";
    //  material2.type = "Inconel_718";
      material2.type = "Subsolvus";
      material2StartStg = 5;
      shape2StartStg = 2;
      diskBoreBladeHubRR = 0.35;
      shaftRef = "WATE_HP_Shaft";
    }
  }
  
  
  //=================================================
  //                      BLD3
  //=================================================
  WATEductBase WATE_bld3 {
    componentRef = "bld3";
    MNin_in = 0.27;
    lengthHeightRatio = 1.6;
    material.type = "Udimet_700"; // "Ti_17" // error: - possible error
  }
  
  
  //=================================================
  //                     BURNER
  //=================================================
  WATEprimaryBurner WATE_burner {
    componentRef = "burner";
    domeType = "SINGLE";
    Vflow = 65;
    residenceTime = 0.009;
    diamSettingComp = "WATE_HPC";
    linerMaterial.type ="TD_Nickel_bar";
    caseMaterial.type ="TD_Nickel_bar";
    
    WATEframeIntermediate S_Frame {
      isFrontFrame = TRUE;
    }
  }
  
  //=================================================
  //                       HPT
  //=================================================
  WATEaxialHPT WATE_HPT {
    componentRef = "HPT";
    geometryType = "ConstMeanRadius";
    numStages_in = 2;
    isFrameInFlow = 0;
    radiusSettingLoc = "Inlet";
    NmechSettingComp = "WATE_HPC";
    hasActiveCaseCooling = 1;
    hasInterStgSealDisk = 1;
    
    MNin = 0.2;
    MNout = 0.432;
    loadingParam = 0.35;
    //GEloadingParam_in = 1.20;
    outerRadiusLimit = 22;
    //bladeSolidity = 0.829;
    bladeVolumeFactor = 0.70;
    bladeMaterial.type = "Rene_108";
    statorMaterial.type = "Rene_108";
    real bladeMaterial.rho(real) { return 0.312; }   // Rene-N5 
    real statorMaterial.rho(real) { return 0.312; }  // Rene-N5
    caseMaterial.type ="V_57";
    stg1BladeAR = 1.15;
    lastStgBladeAR = 1.15;
    //statorSolidity = 0.763;
    statorVolumeFactor = 0.38;
    stg1StatorRotorLR = 1.3;
    lastStgStatorRotorLR = 1.3;
    avgLenPerStg = 2.9;
    
    WATEdiskMTC S_Disk {
      shape1 = "HYPERBOLIC";
    //  shape2 = "OPTIMUM";
      material.type = "Supersolvus";
      shaftRef = "WATE_HP_Shaft";
    }
    WATEframeTurbineExit S_RearFrame {
    }
  }
  
  
  //=================================================
  //                       LPT
  //=================================================
  WATEaxialLPT WATE_LPT {
    componentRef = "LPT";
    geometryType = "ConstMeanRadius";
    numStages_in = 2;
    radiusSettingLoc = "Inlet";
    NmechSettingComp = "WATE_fan";
    radiusSettingComp = "WATE_HPC";
    hasRotorShroud = 1;
    hasSpacerBar = 1;
    
    MNin = 0.432;
    MNout = 0.6;
    loadingParam = .245; //0.4;
    GEloadingParam_in = 0.83;
    bladeSolidity = 1.22;
    bladeVolumeFactor = 0.20;
    bladeMaterial.type = "Rene_95";
    statorMaterial.type = "Rene_95";
    real bladeMaterial.rho(real) { return 0.313; }   // DSR-142
    real statorMaterial.rho(real) { return 0.313; }  // DSR-142
    bladeMaterial2.type ="Udimet_700";
    statorMaterial2.type ="Udimet_700";
    real caseMaterial.rho(real) { return 0.3; }
    stg1BladeAR = 2.0;
    lastStgBladeAR = 2.5;
    statorVolumeFactor = 0.057;
    stg1StatorRotorLR = 1.4;
    lastStgStatorRotorLR = 1.4;
    avgLenPerStg = 6.05;
    radiusMultiplier = 1.25;
    
    //bladeMaterial2StartStg = 3;
    //statorMaterial2StartStg = 3;
    
    WATEdiskMTC S_Disk {
      shape1 = "WEB";
      shape2 = "WEB";
      material.type = "Supersolvus";
      //diskBoreBladeHubRR = 0.69;
      shaftRef = "WATE_LP_Shaft";
    }
    WATEframeCustom S_RearFrame{
      material.type ="Inconel_718";
      supportMaterial.type ="Inconel_718";
      volumeFactor = 0.05;
      aspectRatio_in = 1.45;
      supportThickness = 0.1;
      gapFrameLengthRatio = 0.2;
      numBlades_in = 28;
      connectPoint = "FRONT";
      frontBearingRef = "WATE_LP_Shaft.bearing5";
      rearBearingRef = "WATE_LP_Shaft.bearing5";
    }
    
    void preexecute() {
      if(LPTStageCount.state == "2") {
        numStages_in = 2;
      }
      else if(LPTStageCount.state == "3") {
        numStages_in = 3;
      }
      else if(LPTStageCount.state == "4") {
        numStages_in = 4;
      }
      else if(LPTStageCount.state == "5") {
        numStages_in = 5;
      }
    }
    
   void postexecute() {
     if(outPort.outerRadius/WATE_bypassDuct.outPort.innerRadius > .90) {
       if(LPTStageCount.state == "2") {
         LPTStageCount.stateDemand ="3"; 
       }
       else if(LPTStageCount.state == "3") {
         LPTStageCount.stateDemand ="4"; 
       }
       else if(LPTStageCount.state == "4") {
         LPTStageCount.stateDemand = "5"; 
       }
     }
     if(outPort.outerRadius/WATE_bypassDuct.outPort.innerRadius < .80) {
       if(LPTStageCount.state =="4") {
         LPTStageCount.stateDemand ="3";
       }
     } 
   }   
    
  }
  
  
  //=================================================
  //                     MIXER
  //=================================================
  WATEforcedMixer WATE_mixer {
    componentRef = "mixer";
    primaryStream = "INNER";    //IWMEC(2) = 0
    LDratioEffective = 0.5;
    numPassages = 20;
    innerWallRadius = 12;

  }
  
  
  //=================================================
  //                   NOZZLE
  //=================================================
  //WATEvarNozzleGeometry WATE_Nozzle {
    WATE2DcdNozzle WATE_Nozzle {
  //WATEaxisymCDNozzle WATE_Nozzle {
    componentRef = "nozzle";
    diamSettingComp = "WATE_mixer";
    diamSettingLoc = "Outlet";
    material.type = "_4340_Steel";
    caseMaterial.type = "_4340_Steel";
    //outPort.outerRadius = 15;
    LDratio = 1.513;
    exitHeightWidthRatio = 1.0;
    //exitArea_in = 1038;
    throatLocationFrac = 0.35;
    WATEvarNozzleGeometry S_VariableGeometry;
    hingePoint = "Throat";    
    
    WATEnozzlePlug S_Plug {
      material.type ="_4340_Steel";
      lengthRatio = 0.1;
      thickness = 0.1;
    }
  }
  
  //=================================================
  //                 BYPASSDUCT
  //=================================================
  WATEductBase WATE_bypassDuct {
    componentRef = "bypassDuct";
    MNin_in = 0.56;
    lengthHeightRatio = 20;
    //radiusSettingPort = "WATE_mixer.outPort";
    meanRadius_in = 18.6;
    //outerRR = 1.1;
    real material.rho(real) { return 0.1; }
  WATEframeCustom S_Frame {
      aspectRatio_in = 0.5;
      
      material.type ="Ti_6Al_4v";
      supportMaterial.type ="Ti_6Al_4v";
      volumeFactor = 0.1;
      supportThickness = 0.3;
      gapFrameLengthRatio = 0.2;
 	//numBlades_in = 54;
      passThruComp = "WATE_coreDuct";
      connectPoint = "REAR";
      frontBearingRef = "WATE_LP_Shaft.bearing2";
      rearBearingRef = "WATE_HP_Shaft.bearing3";
   }
   


  }
  
  
  //=================================================
  //                    LP SHAFT
  //=================================================
  WATElpShaft WATE_LP_Shaft {
    componentRef = "LPShaft";
    inertiaComps = {"WATE_fan", "WATE_LPT" };
    limitStress = 50000;
    diamRatio = 0.833;
    material.type ="V_57";
    
    WATErollerBearingSimple bearing1 { }
    WATEballBearingSimple bearing2 { }
    WATErollerBearingSimple bearing5 { }
  }
  
  
  //=================================================
  //                    HP SHAFT
  //=================================================
  WATEhpShaft WATE_HP_Shaft {
    componentRef = "HPShaft";
    isOuterShaft = 1;
    innerShaftRef = "WATE_LP_Shaft";
    inertiaComps = { "WATE_HPC", "WATE_HPT" };
    limitStress = 50000;
    diamRatio = 0.833;
    real material.rho(real) { return 0.3; }
    
    WATEballBearingSimple bearing3 { }
    WATErollerBearingSimple bearing4 { }
  }
  
  
  //=================================================
  //                     INLET
  //=================================================
  WATEinletMDAlowDrag WATE_inlet {
    componentRef = "inlet";
    aftEngMntPortRef = "WATE_LPT.outPort";
    calcStructWt = 1;
    bypassDoorType = "NONE";
    calcFirewallWt = 1;
    calcThroatDoorWt = 1;
    MNin = 1.8;
    LDratio = 2.1;
    real nacelleMaterial.rho(real) { return 0.06; }
    acousticMaterial.type ="acousticComposite";
    firewallMaterial.type ="fireWallDefault";
    fanFaceToMaxNacelleArea = 105;
    nacelleDeltaRadius =  7.1;
    acousticLinerThickness = 0.104;
  //wtCorrelation = 5.5;
  //weight_in=2000;
  
    void postexecute() {
      real D = ((inlet.S_install.Acapture/3.14159)**.5)*2;
      weight = 9.3539*D**1.4659; // curve fit from jon seidel - for q = 2000 1/10/08
      //length = 2.1*D;

    }
  }
  
  
  //=================================================
  //                  ENGINE MOUNT
  //=================================================
  WATEengineMount S_EngineMount {
    mountFactor = 1;
    ultLoadFactor = 2;
  }
  
  
  //=================================================
  //                   ACCESSORIES
  //=================================================
  WATEaccessories S_Accessories {
    s_Wt = 0.055;
  }
  
  //drawtest DRAWTEST { }
  
  
  //=================================================
  //             COMPONENT PORT LINKAGES
  //=================================================


  linkPorts( "WATE_inlet.outPort",                 "WATE_fan.inPort",                "W_fs1" ); 
  linkPorts( "WATE_fan.outPort",                   "WATE_splitter.inPort",           "W_fs11" );
  linkPorts( "WATE_splitter.outPortPrimary",       "WATE_coreDuct.inPort",           "W_fS_19");
  linkPorts("WATE_coreDuct.outPort",               "WATE_HPC.inPort",                "W_fs2" );
  linkPorts( "WATE_HPC.outPort",                   "WATE_bld3.inPort",               "W_fs3" );
  linkPorts( "WATE_bld3.outPort",                  "WATE_burner.inPort",             "W_fs31" );
  linkPorts( "WATE_burner.outPort",                "WATE_HPT.inPort",                "W_fs4"  );
  linkPorts( "WATE_HPT.outPort",                   "WATE_LPT.inPort",                "W_fs42" );
  linkPorts( "WATE_LPT.outPort",                   "WATE_mixer.innerInPort",         "W_fs5"  );
  linkPorts( "WATE_mixer.outPort",                 "WATE_Nozzle.inPort",             "W_fs57" );
  linkPorts( "WATE_splitter.outPortSecondary",     "WATE_bypassDuct.inPort",         "W_fs13" );
  linkPorts( "WATE_bypassDuct.outPort",            "WATE_mixer.outerInPort",         "W_fs17" ); 

  
  
  //=================================================
  //            GRAPHICAL AND TEXT OUTPUT
  //=================================================
  WATEsvgViewer svg {
    filename = "E3engine.html";
    imageHeight = 500;
    imageWidth = 900;
  }
  
  #include <npss.view_wate++>  
  
}  // end of WATEa

solverSequence.remove("WATE");


//WATEa.WATE_Fan.MNin = 0.588;
//WATEa.WATE_Fan.hubTipRatioIn = 0.3125;
//WATEa.WATE_LPC.maxODrefPort = "";
//WATEa.WATE_LPC.MNin = 0.33;
//WATEa.WATE_LPC.MNout = 0.33;
//WATEa.WATE_LPC.hubTipRatioIn = 0.735;
//WATEa.WATE_LPC.geometryType = "ConstHubRadius";
//WATEa.WATE_LPC.outletInletRR = 1.0;
//WATEa.WATE_HPT.GEloadingParam_in = 1.00;
//WATEa.WATE_LPT.MNin = 0.25;
//WATEa.WATE_LPT.MNout = 0.30;
//WATEa.WATE_Duct15.outerRR = 1.0;

//WATEa.WATE_Fan.stg1BladeAR = 1.75; WATEa.WATE_Fan.lastStgBladeAR = 1.75;
//WATEa.WATE_Fan.RSlenRatioPreSplit = 0.35;
//WATEa.WATE_Fan.RSlenRatioPostSplit = 1.0;
//WATEa.WATE_Fan.RSlenRatioBypass = 1.0;
//WATEa.WATE_LPC.stg1StatorRotorLR = 1.5;
//WATEa.WATE_Duct6.S_Frame.aspectRatio_in = 0.33;
//WATEa.WATE_Duct6.lengthHeightRatio = 5.0;
//WATEa.WATE_Duct11.lengthHeightRatio = 2.2;
//WATEa.WATE_LPT.S_RearFrame.gapFrameLengthRatio = 0.6;
//WATEa.WATE_Duct13.lengthHeightRatio = 0.25;
//WATEa.WATE_Core_Nozz.S_Plug.lengthRatio = 0.65;
//WATEa.WATE_Core_Nozz.LDratio = 0.85;
//WATEa.WATE_Duct15.lengthHeightRatio = 0.40;
//WATEa.WATE_Byp_Nozz.inletInnerRadius = 19.0;
//WATEa.WATE_Inlet.LDratio = 0.55;
//WATEa.WATE_LPC.bladeVolumeFactor = 0.10;
//WATEa.WATE_LPC.statorVolumeFactor = 0.10;
// commented out HPT blade and stator material rho
//WATEa.WATE_HPC.s_Nmech = 0.900;
//WATEa.WATE_LPT.S_Disk.diskBoreBladeHubRR = 0.50;
