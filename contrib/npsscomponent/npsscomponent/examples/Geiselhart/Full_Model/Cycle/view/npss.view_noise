OutFileStream NoiseStreamSummary { filename = "NPSS_ANOPP.outputNOISE"; } 

DataViewer CaseColumnViewer NviewSumm { 

  titleBody = "
Engine Performance Data for use with ANOPP Noise Simulation:

Engine Scale Factor (Area-Based) used:          ?.???

Fan Diameter (in):                             ???.??
Fan Diameter (ft):                             ??.???
Engine Reference Area (in2):                  ?????.?
Engine Reference Area (ft2):                  ???.???
Fan Hub Diameter (in):                          ??.??
Fan Hub Diameter (ft):                          ?.???
Fan Flow Area (ft2):                          ???.???
Fan Blades:                                       ???
Fan Vanes:                                        ???
Fan Rotor-Stator Spacing (in):                  ??.??
Fan Rotor-Stator Spacing (frac):               ?.????
Fan Blade Aspect Ratio:                         ?.???
Avg Fan Blade Axial Length (in):                ??.??
Avg Fan Blade Chord Length (in):                ??.??
Tip Fan Blade Axial Length (in):                ??.??
Tip Fan Blade Chord Length (in):                ??.??
Reference Sound Speed (ft/s):                  ????.?
WATE Design Fan N1 (rpm):                      ????.?
Axial Length of Inlet (in):                    ???.??
Axial Length of Inlet Treated Area (in):       ???.??
Inlet Radius of Treated Region (in):           ???.??
Axial Length of Aft Fan Treated Area (in):     ???.??
Avg Duct Height of Aft Treated Region (in):    ???.??
Burner Inlet Inner Radius (in):                ???.??
Burner Inlet Outer Radius (in):                ???.??
Burner Inlet Area (ft2):                       ??.???
LPT Stage Count:                                   ??
LPT Final Stage Blades:                           ???
LPT Final Stage Tip Diameter (ft):             ??.???
LPT Final Stage Hub Diameter (ft):             ??.???
LPT Exit Area (ft2):                           ??.???
Core Nozzle Plug Diameter at throat/exit(ft):  ??.???
Core Nozzle Outer Diameter at throat/exit(ft): ??.???
Fan Nozzle Inner Diameter at throat/exit(ft):  ??.???
Fan Nozzle Outer Diameter at throat/exit(ft):  ??.???
Fan Nozz Exit to Core Nozz Exit Distance (ft): ??.???

";

  titleVars = { 
      "ESF", 
      "2.*WATE_Fan.stg1TipRadius*C_FTtoIN", 
      "2.*WATE_Fan.stg1TipRadius", 
      "A_ref", 
      "A_ref/C_FT2toIN2",
      "2.*WATE_Fan.hubRadius_stg[0]", 
      "2.*WATE_Fan.hubRadius_stg[0]*C_INtoFT", 
      "WATE_Fan.areaIn",
      "WATE_Fan.numBlades_stg[0]", 
      "WATE_Fan.numStatorBlades_stg[0]", 
      "WATE_Fan.bypassLen_stg[0] - WATE_Inlet.fanLength", 
      "(WATE_Fan.bypassLen_stg[0] - WATE_Inlet.fanLength)/WATE_Inlet.fanLength", 
      "WATE_Fan.AR_stg[0]", 
      // these next 4 values ?
      "WATE_Inlet.fanLength", 
      "(WATE_Fan.tipRadius_stg[0] - WATE_Fan.hubRadius_stg[0]) / WATE_Fan.AR_stg[0]", 
      "WATE_Inlet.fanLength*0.30", 
      "((WATE_Fan.tipRadius_stg[0] - WATE_Fan.hubRadius_stg[0]) / WATE_Fan.AR_stg[0])*0.30", 
      "sqrt(view.Inlet->Fl_I.gams*view.Inlet->Fl_I.Rs*view.Inlet->Fl_I.Ts*C_BTUtoFT_LBF*C_GRAVITY)", 
      "WATE_Fan.spoolRPM", 
      "WATE_Inlet.mostFwdToEngFFLength*C_FTtoIN", 
      "WATE_Inlet.mostFwdToEngFFLength*C_FTtoIN * 0.80", 
      "WATE_Fan.stg1TipRadius*C_FTtoIN", 
      "(WATE_Inlet.fanExhaustLength - (WATE_Fan.bypassLen_stg[0] - WATE_Inlet.fanLength))*0.80", 
      "(2.*WATE_Fan.stg1TipRadius*C_FTtoIN - WATE_Inlet.avgCowlDiam)*0.50", 
      "WATE_Burner.innerDiam/2.", 
      "WATE_Burner.outerDiam/2.", 
      "PI/4.*(WATE_Burner.outerDiam**2. - WATE_Burner.innerDiam**2.)/C_FT2toIN2", 
      "WATE_LPT.numStages", 
      "WATE_LPT.numBlades_stg[last_LPT_stg]", 
      "2.*WATE_LPT.tipRadius_stg[last_LPT_stg]*C_INtoFT", 
      "2.*WATE_LPT.hubRadius_stg[last_LPT_stg]*C_INtoFT", 
      "WATE_LPT.area_stg[last_LPT_stg]", 
      "2.*WATE_Core_Nozz.outPort.innerRadius*C_INtoFT", 
      "2.*WATE_Core_Nozz.outPort.outerRadius*C_INtoFT", 
      "2.*WATE_Byp_Nozz.outPort.innerRadius*C_INtoFT", 
      "2.*WATE_Byp_Nozz.outPort.outerRadius*C_INtoFT", 
      "(WATE_Core_Nozz.outPort.axialPosition - WATE_Byp_Nozz.outPort.axialPosition)*C_INtoFT" } 


  variableList = { 
       "view.Ambient->MN:??.?? = Aircraft Mach No.",
       "view.Ambient->alt:?????.? = Aircraft Altitude (ft)",
       "view.Ambient->Ps:???.?? = Ambient Pressure (psia)",
       "view.Ambient->Ts:????.? = Ambient Temperature (R)",
       "view.Ambient->Ts - 459.67:????.? = Ambient Temperature (F)",
       "view.Ambient->Fl_O.gams:??.???? = Ambient Specific Heat Ratio",
       "view.Ambient->Fl_O.Rs:????.?? = Ambient Gas Constant (ft2/s2-R) @ft2/(sec2*R)",
       "view.Ambient->Fl_O.rhos:??.??????? = Ambient Density (sl/ft3) @slug/ft3",
       "sqrt(view.Inlet->Fl_I.gams*view.Inlet->Fl_I.Rs*view.Inlet->Fl_I.Ts*C_BTUtoFT_LBF*C_GRAVITY):????.? = Ambient Sound Speed (ft/s)",
       "view.PERF->Fg:??????.? = Gross Thrust (lb)",
       "view.Inlet->Fram:?????.? = Ram Drag (lb)",
       "view.PERF->Fn:??????.? = Net Thrust (lb)",
       "MaxThrust:??????.? = Full Power Net Thrust (lb)",
       "view.PERF->Fn/MaxThrust*100:????.? = Net Thrust Fraction (%)",
       "view.PC->PC:??.? = Power Code",
       "view.Inlet->Fl_O.W:????.? = Inlet Airflow (lbm/s)",
       "view.LP_Shaft->Nmech*LP_RPM_scalar:?????.? = Fan N1 (rpm)",
       "WATE_Fan.spoolRPM*WATE_Fan.maxSpdRatio:?????.? = Fan N1, Design (rpm)",
       "(view.LP_Shaft->Nmech*LP_RPM_scalar/WATE_Fan.spoolRPM)*100:????.? = N1 Fraction (%)",
       "(view.LP_Shaft->Nmech*LP_RPM_scalar)*WATE_Fan.stg1TipRadius*C_RPMtoRAD_PER_SEC:?????.? = Fan Tip Speed (ft/s)", 
       "view.Fan->Fl_I.MN:?.???? = Fan Face Mach Number",
       "view.Fan->Fl_I.Tt:???.? = Fan Inlet Tt (R)",
       "view.Fan->Fl_O.Tt:???.? = Fan Exit Tt (R)",
       "view.Fan->PR:??.??? = Fan Pressure Ratio",
       "view.Fan->eff:?.??? = Fan Adiabatic Efficiency",
       "view.Splitter->BPR:??.?? = Bypass Ratio",

       "view.Core_Nozz->Fl_I.Tt:????.? = Core Nozzle Tt (R)",
       "view.Core_Nozz->Fl_I.Pt:????.?? = Core Nozzle Pt (psia)",
       "view.Core_Nozz->PR:????.??? = Core Nozzle Pressure Ratio",
       "view.Core_Nozz->Fl_Oideal.Vflow:????.? = Core Nozzle Exit Vjideal (ft/s)",
       "view.Core_Nozz->Fl_O.Aphy:????.? = Core Nozzle Exit Area (in2)",
       "view.Core_Nozz->Fl_O.W:????.? = Core Nozzle Flow (lbm/s)",
       "view.Core_Nozz->Fl_O.gams:?.???? = Core Nozzle Specific Heat Ratio",
       "view.Core_Nozz->Fl_O.Rs:????.? = Core Nozzle Gas Constant (ft2/s2-R) @ft2/(sec2*R)",
       "view.Core_Nozz->Fl_O.rhos:?.??????? = Core Nozzle Exit Static Density (sl/ft3) @slug/ft3",
       "view.Core_Nozz->Fl_O.MN:??.??? = Core Nozzle Exit Mach",
       "view.Byp_Nozz->Fl_I.Tt:????.? = Fan Nozzle Tt (R)",
       "view.Byp_Nozz->Fl_I.Pt:????.?? = Fan Nozzle Pt (psia)",
       "view.Byp_Nozz->PR:????.??? = Fan Nozzle Pressure Ratio",
       "view.Byp_Nozz->Fl_Oideal.Vflow:????.? = Fan Nozzle Exit Vjideal (ft/s)",
       "view.Byp_Nozz->Fl_O.Aphy:????.? = Fan Nozzle Exit Area (in2)",
       "view.Byp_Nozz->Fl_O.W:????.? = Fan Nozzle Flow (lbm/s)",
       "view.Byp_Nozz->Fl_O.gams:?.??? = Fan Nozzle Specific Heat Ratio",
       "view.Byp_Nozz->Fl_O.Rs:????.? = Fan Nozzle Gas Constant (ft2/s2-R) @ft2/(sec2*R)",
       "view.Byp_Nozz->Fl_O.rhos:?.??????? = Fan Nozzle Exit Static Density (sl/ft3) @slug/ft3",
       "view.Byp_Nozz->Fl_O.MN:??.??? = Fan Nozzle Exit Mach",

       "view.Burner->Wfuel:??.?? = Fuel Flow (lbm/s)",
       "view.Burner->Fl_I.W:???.? = view.Burner->Inlet Airflow (lbm/s)",
       "view.Burner->Fl_I.Pt:????.? = view.Burner->Inlet Pt (psia)",
       "view.Burner->Fl_I.Tt:????.? = view.Burner->Inlet Tt (R)",
       "view.Burner->Fl_O.Pt:????.? = view.Burner->Exit Pt (psia)",
       "view.Burner->Fl_O.Tt:????.? = view.Burner->Exit Tt (R)",
       "view.LPT->Fl_O.Tt:????.? = LPT Exit Tt (R)",
       "(view.Burner->Fl_O.Tt - view.LPT->Fl_O.Tt):????.? = Temperature Drop Through Turbines (R)"
        } 

  
  showMarks = FALSE; 
  pageWidth = 5000; 
  pageHeight = 500; 
  outStreamHandle = "NoiseStreamSummary"; 

} 

