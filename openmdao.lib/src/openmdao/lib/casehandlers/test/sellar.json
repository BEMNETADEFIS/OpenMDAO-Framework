{
"__length_1": 23262
, "simulation_info": {
    "OpenMDAO_Version": "0.10.3.2", 
    "comp_graph": "{\"directed\": true, \"graph\": [], \"nodes\": [{\"comp\": true, \"id\": \"sub\"}, {\"comp\": true, \"driver\": true, \"id\": \"driver\"}, {\"comp\": true, \"id\": \"half\"}, {\"comp\": true, \"pseudo\": \"constraint\", \"id\": \"_pseudo_1\"}, {\"comp\": true, \"pseudo\": \"objective\", \"id\": \"_pseudo_0\"}, {\"comp\": true, \"pseudo\": \"constraint\", \"id\": \"_pseudo_2\"}], \"links\": [{\"source\": 0, \"target\": 3}, {\"source\": 0, \"target\": 4}, {\"source\": 0, \"target\": 5}, {\"source\": 2, \"target\": 0}], \"multigraph\": false}", 
    "constants": {
        "directory": "", 
        "driver.accuracy": 1e-06, 
        "driver.directory": "", 
        "driver.force_fd": false, 
        "driver.gradient_options.atol": 1e-09, 
        "driver.gradient_options.derivative_direction": "auto", 
        "driver.gradient_options.directional_fd": false, 
        "driver.gradient_options.fd_blocks": [], 
        "driver.gradient_options.fd_form": "forward", 
        "driver.gradient_options.fd_step": 1e-06, 
        "driver.gradient_options.fd_step_type": "absolute", 
        "driver.gradient_options.force_fd": true, 
        "driver.gradient_options.lin_solver": "scipy_gmres", 
        "driver.gradient_options.maxiter": 100, 
        "driver.gradient_options.rtol": 1e-09, 
        "driver.iout": 6, 
        "driver.iprint": 0, 
        "driver.maxiter": 50, 
        "driver.output_filename": "slsqp.out", 
        "force_fd": false, 
        "half.directory": "", 
        "half.force_fd": false, 
        "half.missing_deriv_policy": "error", 
        "missing_deriv_policy": "assume_zero", 
        "recording_options.excludes": [], 
        "recording_options.includes": [
            "*"
        ], 
        "recording_options.save_problem_formulation": true, 
        "sub.directory": "", 
        "sub.dis1.directory": "", 
        "sub.dis1.force_fd": false, 
        "sub.dis1.missing_deriv_policy": "error", 
        "sub.dis2.directory": "", 
        "sub.dis2.force_fd": false, 
        "sub.dis2.missing_deriv_policy": "error", 
        "sub.driver.directory": "", 
        "sub.driver.force_fd": false, 
        "sub.driver.gradient_options.atol": 1e-09, 
        "sub.driver.gradient_options.derivative_direction": "auto", 
        "sub.driver.gradient_options.directional_fd": false, 
        "sub.driver.gradient_options.fd_blocks": [], 
        "sub.driver.gradient_options.fd_form": "forward", 
        "sub.driver.gradient_options.fd_step": 1e-06, 
        "sub.driver.gradient_options.fd_step_type": "absolute", 
        "sub.driver.gradient_options.force_fd": false, 
        "sub.driver.gradient_options.lin_solver": "scipy_gmres", 
        "sub.driver.gradient_options.maxiter": 100, 
        "sub.driver.gradient_options.rtol": 1e-09, 
        "sub.driver.max_iteration": 100, 
        "sub.driver.tolerance": 1e-05, 
        "sub.force_fd": false, 
        "sub.missing_deriv_policy": "assume_zero", 
        "sub.recording_options.excludes": [], 
        "sub.recording_options.includes": [
            "*"
        ], 
        "sub.recording_options.save_problem_formulation": true
    }, 
    "expressions": {
        "(sub.x1)**2+sub.globals.z2+sub.states.y[0]+math.exp(-sub.states.y[1])": {
            "data_type": "Objective", 
            "pcomp_name": "_pseudo_0"
        }, 
        "3.16 < sub.states.y[0]": {
            "data_type": "Constraint", 
            "pcomp_name": "_pseudo_1"
        }, 
        "sub.dis2.y2 = dis1.y2": {
            "data_type": "Constraint", 
            "pcomp_name": "sub._pseudo_0"
        }, 
        "sub.states.y[1] < 24.0": {
            "data_type": "Constraint", 
            "pcomp_name": "_pseudo_2"
        }
    }, 
    "graph": "{\"directed\": true, \"graph\": [[\"title\", \"unknown\"]], \"nodes\": [{\"full\": \"_pseudo_1.in0\", \"color_idx\": 3, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_1.in0\", \"short\": \"in0\"}, {\"full\": \"half.z2a\", \"color_idx\": 2, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"half.z2a\", \"short\": \"z2a\"}, {\"full\": \"driver.output_filename\", \"color_idx\": 1, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"output_filename\", \"var\": true, \"iotype\": \"in\", \"id\": \"driver.output_filename\"}, {\"short\": \"half\", \"color_idx\": 2, \"full\": \"half\", \"title\": \"{}\", \"comp\": true, \"id\": \"half\"}, {\"full\": \"sub.globals.z2\", \"color_idx\": 0, \"title\": \"{'basevar': 'sub.globals', 'differentiable': False}\", \"differentiable\": false, \"basevar\": \"sub.globals\", \"short\": \"globals.z2\", \"var\": true, \"iotype\": \"in\", \"id\": \"sub.globals.z2\"}, {\"full\": \"sub.globals.z1\", \"color_idx\": 0, \"title\": \"{'basevar': 'sub.globals', 'differentiable': False}\", \"differentiable\": false, \"basevar\": \"sub.globals\", \"short\": \"globals.z1\", \"var\": true, \"iotype\": \"in\", \"id\": \"sub.globals.z1\"}, {\"full\": \"_pseudo_0.in0\", \"color_idx\": 4, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_0.in0\", \"short\": \"in0\"}, {\"full\": \"_pseudo_0.in1\", \"color_idx\": 4, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_0.in1\", \"short\": \"in1\"}, {\"full\": \"_pseudo_0.in2\", \"color_idx\": 4, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_0.in2\", \"short\": \"in2\"}, {\"full\": \"_pseudo_0.in3\", \"color_idx\": 4, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_0.in3\", \"short\": \"in3\"}, {\"short\": \"sub\", \"color_idx\": 0, \"full\": \"sub\", \"title\": \"{}\", \"comp\": true, \"id\": \"sub\"}, {\"full\": \"half.z2b\", \"color_idx\": 2, \"title\": \"{}\", \"var\": true, \"iotype\": \"out\", \"id\": \"half.z2b\", \"short\": \"z2b\"}, {\"full\": \"driver.iprint\", \"color_idx\": 1, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"iprint\", \"var\": true, \"iotype\": \"in\", \"id\": \"driver.iprint\"}, {\"full\": \"sub.states\", \"color_idx\": 0, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"states\", \"var\": true, \"iotype\": \"out\", \"id\": \"sub.states\"}, {\"full\": \"sub.states.y[1]\", \"color_idx\": 0, \"title\": \"{'basevar': 'sub.states', 'differentiable': False}\", \"differentiable\": false, \"basevar\": \"sub.states\", \"short\": \"states.y[1]\", \"var\": true, \"iotype\": \"out\", \"id\": \"sub.states.y[1]\"}, {\"full\": \"driver.accuracy\", \"color_idx\": 1, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"driver.accuracy\", \"short\": \"accuracy\"}, {\"full\": \"driver.error_code\", \"color_idx\": 1, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"error_code\", \"var\": true, \"iotype\": \"out\", \"id\": \"driver.error_code\"}, {\"full\": \"sub.states.y[0]\", \"color_idx\": 0, \"title\": \"{'basevar': 'sub.states', 'differentiable': False}\", \"differentiable\": false, \"basevar\": \"sub.states\", \"short\": \"states.y[0]\", \"var\": true, \"iotype\": \"out\", \"id\": \"sub.states.y[0]\"}, {\"full\": \"driver.iout\", \"color_idx\": 1, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"iout\", \"var\": true, \"iotype\": \"in\", \"id\": \"driver.iout\"}, {\"full\": \"_pseudo_1.out0\", \"color_idx\": 3, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"out0\", \"var\": true, \"iotype\": \"out\", \"id\": \"_pseudo_1.out0\"}, {\"short\": \"_pseudo_1\", \"color_idx\": 3, \"full\": \"_pseudo_1\", \"title\": \"{}\", \"comp\": true, \"pseudo\": \"constraint\", \"id\": \"_pseudo_1\"}, {\"short\": \"_pseudo_0\", \"color_idx\": 4, \"full\": \"_pseudo_0\", \"title\": \"{}\", \"comp\": true, \"pseudo\": \"objective\", \"id\": \"_pseudo_0\"}, {\"full\": \"_pseudo_2.in0\", \"color_idx\": 5, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"_pseudo_2.in0\", \"short\": \"in0\"}, {\"short\": \"_pseudo_2\", \"color_idx\": 5, \"full\": \"_pseudo_2\", \"title\": \"{}\", \"comp\": true, \"pseudo\": \"constraint\", \"id\": \"_pseudo_2\"}, {\"short\": \"driver\", \"color_idx\": 1, \"full\": \"driver\", \"title\": \"{'driver': True}\", \"comp\": true, \"driver\": true, \"id\": \"driver\"}, {\"full\": \"_pseudo_0.out0\", \"color_idx\": 4, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"out0\", \"var\": true, \"iotype\": \"out\", \"id\": \"_pseudo_0.out0\"}, {\"full\": \"_pseudo_2.out0\", \"color_idx\": 5, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"out0\", \"var\": true, \"iotype\": \"out\", \"id\": \"_pseudo_2.out0\"}, {\"full\": \"sub.globals\", \"color_idx\": 0, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"globals\", \"var\": true, \"iotype\": \"in\", \"id\": \"sub.globals\"}, {\"full\": \"driver.maxiter\", \"color_idx\": 1, \"title\": \"{'differentiable': False}\", \"differentiable\": false, \"short\": \"maxiter\", \"var\": true, \"iotype\": \"in\", \"id\": \"driver.maxiter\"}, {\"full\": \"sub.x1\", \"color_idx\": 0, \"title\": \"{}\", \"var\": true, \"iotype\": \"in\", \"id\": \"sub.x1\", \"short\": \"x1\"}], \"links\": [{\"source\": 0, \"target\": 20}, {\"source\": 1, \"target\": 3}, {\"source\": 2, \"target\": 24}, {\"drv_conn\": \"driver\", \"target\": 24, \"source\": 19}, {\"source\": 4, \"target\": 7, \"conn\": true}, {\"source\": 4, \"target\": 27}, {\"source\": 5, \"target\": 27}, {\"source\": 6, \"target\": 21}, {\"source\": 7, \"target\": 21}, {\"source\": 8, \"target\": 21}, {\"source\": 9, \"target\": 21}, {\"source\": 10, \"target\": 13}, {\"source\": 11, \"target\": 4, \"conn\": true}, {\"source\": 12, \"target\": 24}, {\"source\": 13, \"target\": 14}, {\"source\": 13, \"target\": 17}, {\"source\": 14, \"target\": 22, \"conn\": true}, {\"source\": 14, \"target\": 9, \"conn\": true}, {\"source\": 15, \"target\": 24}, {\"drv_conn\": \"driver\", \"target\": 24, \"source\": 26}, {\"source\": 18, \"target\": 24}, {\"drv_conn\": \"driver\", \"target\": 24, \"source\": 25}, {\"source\": 3, \"target\": 11}, {\"source\": 20, \"target\": 19}, {\"source\": 21, \"target\": 25}, {\"source\": 22, \"target\": 23}, {\"source\": 23, \"target\": 26}, {\"drv_conn\": \"driver\", \"target\": 1, \"source\": 24}, {\"drv_conn\": \"driver\", \"target\": 5, \"source\": 24}, {\"drv_conn\": \"driver\", \"target\": 29, \"source\": 24}, {\"source\": 24, \"target\": 16}, {\"source\": 17, \"target\": 0, \"conn\": true}, {\"source\": 17, \"target\": 8, \"conn\": true}, {\"source\": 27, \"target\": 10}, {\"source\": 28, \"target\": 24}, {\"source\": 29, \"target\": 6, \"conn\": true}, {\"source\": 29, \"target\": 10}], \"multigraph\": false}", 
    "name": "top", 
    "uuid": "ada26af5-7748-11e4-896e-20c9d0478eff", 
    "variable_metadata": {
        "directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "driver.accuracy": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "driver.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "driver.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "driver.gradient_options.atol": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "driver.gradient_options.derivative_direction": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "auto", 
                "forward", 
                "adjoint"
            ], 
            "vartypename": "Enum"
        }, 
        "driver.gradient_options.directional_fd": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "driver.gradient_options.fd_blocks": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "driver.gradient_options.fd_form": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "forward", 
                "backward", 
                "central", 
                "complex_step"
            ], 
            "vartypename": "Enum"
        }, 
        "driver.gradient_options.fd_step": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "driver.gradient_options.fd_step_type": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "absolute", 
                "relative", 
                "bounds_scaled"
            ], 
            "vartypename": "Enum"
        }, 
        "driver.gradient_options.force_fd": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "driver.gradient_options.lin_solver": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "scipy_gmres", 
                "petsc_ksp", 
                "linear_gs"
            ], 
            "vartypename": "Enum"
        }, 
        "driver.gradient_options.maxiter": {
            "assumed_default": false, 
            "exclude_high": false, 
            "exclude_low": false, 
            "high": 9223372036854775807, 
            "iotype": "in", 
            "low": -9223372036854775807, 
            "vartypename": "Int"
        }, 
        "driver.gradient_options.rtol": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "driver.iout": {
            "assumed_default": false, 
            "exclude_high": false, 
            "exclude_low": false, 
            "high": 9223372036854775807, 
            "iotype": "in", 
            "low": -9223372036854775807, 
            "vartypename": "Int"
        }, 
        "driver.iprint": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                0, 
                1, 
                2, 
                3
            ], 
            "vartypename": "Enum"
        }, 
        "driver.maxiter": {
            "assumed_default": false, 
            "exclude_high": false, 
            "exclude_low": false, 
            "high": 9223372036854775807, 
            "iotype": "in", 
            "low": -9223372036854775807, 
            "vartypename": "Int"
        }, 
        "driver.output_filename": {
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "half.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "half.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "half.missing_deriv_policy": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "values": [
                "error", 
                "assume_zero"
            ], 
            "vartypename": "Enum"
        }, 
        "half.z2a": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "missing_deriv_policy": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "values": [
                "error", 
                "assume_zero"
            ], 
            "vartypename": "Enum"
        }, 
        "recording_options.excludes": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "recording_options.includes": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "recording_options.save_problem_formulation": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "sub.dis1.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "sub.dis1.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.dis1.missing_deriv_policy": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "values": [
                "error", 
                "assume_zero"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.dis1.y2": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.dis2.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "sub.dis2.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.dis2.missing_deriv_policy": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "values": [
                "error", 
                "assume_zero"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.driver.directory": {
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Str"
        }, 
        "sub.driver.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.driver.gradient_options.atol": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.driver.gradient_options.derivative_direction": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "auto", 
                "forward", 
                "adjoint"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.driver.gradient_options.directional_fd": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.driver.gradient_options.fd_blocks": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "sub.driver.gradient_options.fd_form": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "forward", 
                "backward", 
                "central", 
                "complex_step"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.driver.gradient_options.fd_step": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.driver.gradient_options.fd_step_type": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "absolute", 
                "relative", 
                "bounds_scaled"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.driver.gradient_options.force_fd": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.driver.gradient_options.lin_solver": {
            "assumed_default": false, 
            "iotype": "in", 
            "values": [
                "scipy_gmres", 
                "petsc_ksp", 
                "linear_gs"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.driver.gradient_options.maxiter": {
            "assumed_default": false, 
            "exclude_high": false, 
            "exclude_low": false, 
            "high": 9223372036854775807, 
            "iotype": "in", 
            "low": -9223372036854775807, 
            "vartypename": "Int"
        }, 
        "sub.driver.gradient_options.rtol": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.driver.max_iteration": {
            "assumed_default": false, 
            "exclude_high": false, 
            "exclude_low": false, 
            "high": 9223372036854775807, 
            "iotype": "in", 
            "low": -9223372036854775807, 
            "vartypename": "Int"
        }, 
        "sub.driver.tolerance": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.force_fd": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.globals.z1": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "vartypename": "Float"
        }, 
        "sub.missing_deriv_policy": {
            "assumed_default": false, 
            "deriv_ignore": true, 
            "iotype": "in", 
            "values": [
                "error", 
                "assume_zero"
            ], 
            "vartypename": "Enum"
        }, 
        "sub.recording_options.excludes": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "sub.recording_options.includes": {
            "copy": "deep", 
            "iotype": "in", 
            "vartypename": "List"
        }, 
        "sub.recording_options.save_problem_formulation": {
            "assumed_default": false, 
            "iotype": "in", 
            "vartypename": "Bool"
        }, 
        "sub.x1": {
            "assumed_default": false, 
            "high": null, 
            "iotype": "in", 
            "low": null, 
            "target": "dis1.x1", 
            "vartypename": "Float"
        }
    }
}
, "__length_2": 900
, "driver_info_1": {
    "_id": 4583599664, 
    "eq_constraints": [], 
    "ineq_constraints": [
        "3.16 < sub.states.y[0]", 
        "sub.states.y[1] < 24.0"
    ], 
    "name": "driver", 
    "objectives": [
        "(sub.x1)**2+sub.globals.z2+sub.states.y[0]+math.exp(-sub.states.y[1])"
    ], 
    "parameters": [
        "sub.globals.z1", 
        "half.z2a", 
        "sub.x1"
    ], 
    "recording": [
        "sub.globals.z1", 
        "half.z2a", 
        "sub.x1", 
        "top._pseudo_0.out0", 
        "top._pseudo_1.out0", 
        "top._pseudo_2.out0", 
        "top.half.z2b", 
        "top.sub.states.y[0]", 
        "top.sub.states.y[1]", 
        "top.half.derivative_exec_count", 
        "top.half.exec_count", 
        "top.half.itername", 
        "top.sub.derivative_exec_count", 
        "top.sub.exec_count", 
        "top.sub.itername", 
        "top.driver.workflow.itername"
    ]
}
, "__length_3": 573
, "driver_info_2": {
    "_id": 4583598992, 
    "eq_constraints": [
        "dis2.y2 = dis1.y2"
    ], 
    "name": "sub.driver", 
    "parameters": [
        "dis1.y2"
    ], 
    "recording": [
        "dis1.y2", 
        "top.sub._pseudo_0.out0", 
        "top.sub.dis1.y1", 
        "top.sub.dis2.y2", 
        "top.sub.dis1.exec_count", 
        "top.sub.dis1.itername", 
        "top.sub.dis1.derivative_exec_count", 
        "top.sub.dis2.derivative_exec_count", 
        "top.sub.dis2.exec_count", 
        "top.sub.dis2.itername", 
        "top.sub.driver.workflow.itername"
    ]
}
}
