[buildout]
develop = 
   ../openmdao.main
   ../openmdao.lib
   ../openmdao.recipes
   ../eggsrc/npsscomponent


parts = 
   rec
   app
#   junk

# note, eggs actually live in the 'dist' dir under the specified
# download-cache
download-cache = /OpenMDAO/distrib-cache
install-from-cache = true
newest = false

[rec]
recipe = zc.recipe.egg:scripts
eggs = zc.recipe.egg

# this recipe just dumps the buildout dict and all of the local
# options. It was created to test out the recipe API
#[junk]
#recipe = openmdao.recipes:dummy
#opt1 = 'foo'

# NOTE: using zc.recipe.egg, you can specify version
# requirements, for example:
# eggs = openmdao.main==1.2
#        openmdao.lib>=0.4
[app]
#recipe = zc.recipe.egg:scripts
recipe = openmdao.recipes:isolatedegg
# put all of the eggs this part depends on here
eggs = openmdao.main
       openmdao.lib
       zope.interface
       zope.component
       zope.schema
       PyYAML
       ScientificPython
       conmin
       npsscomponent
       coverage
       nose
    

# the nosetests script comes with nose. Just rename it to test
scripts = nosetests=test

# can explicitly make a script out of any python function like this
# entry-points = somename=my.module.path:a.b.myfunct other=foo.bar:x.y.z

# custom python interpreter with all of the paths we need
interpreter = python


