# This buildout config takes whatever's in our regular buildout.cfg
# and bundles it up into a tar file containing all of the eggs needed
# to create the buildout.

[buildout]
# We can 'extend' another (could also be mutiple) buildout config file
# We could also supply URLs here to use remote configs
extends = buildout.cfg

#offline = true

# the -= operator doesn't seem to have the desired effect...
#parts -=  pylint
#parts -= wingsetup

# at least += works :)
parts += bundler

# because -= doesn't work, we have to null out the recipe
# field of any parts that we don't want from the base config 

[pylint]
recipe =

[wingsetup]
recipe =



[app]
scripts = openmdaotest=test
# get rid of the args passed to the test script so it won't try to run testdocs,
# which wouldn't work in the bundle
arguments = 


[sphinxbuild]
build = docs
        docscript


[bundler]
recipe = openmdao.recipes:bundler

# specify the overall version of the bundle
bundle_name = OpenMDAO
bundle_version = 0.1
readme = README.bundle


# Specify list of distribs needed for this buildout. 
eggs = ${app:eggs}

# Put names of parts to be excluded from the bundled buildout.cfg here
exclude_parts = bundler
                licenses

## By default, most distributions with extensions are distributed as
## source, requiring that the person running the buildout on the bundle
## have certain tools available (C and fortran compilers, f2py, etc.).
## If you wish to 'pre-build' certain distributions into binary eggs,
## specify them here.  Note that doing this can make the bundle dependent
## on the presence of certain shared libraries that the user of the 
## bundle may not have on his system.
#bdists = coverage
         #Traits

# If this is true, hardwire the buildout to the specific versions that
# we're using. This should normally be true unless you like to live
# dangerously.
pin_versions = true

# Specify files and/or directories to copy to the bundle.
# You can specify a destination directory stucture on the right side
# of the '=' if you need to. Otherwise, you just get a file or directory
# in the top level of the archive with the given basename of the path
# you provide.
extra_data = ../docs/_build/html=docs/_build/html
             setup=buildout/setup

## set this to false if you don't want to create the tar file, but
## just want to look at the generated bundle for debugging purposes
archive = true
