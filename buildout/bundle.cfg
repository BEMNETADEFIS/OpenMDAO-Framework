# This buildout config takes whatever's in our regular buildout.cfg
# and bundles it up into a tar file containing all of the eggs needed
# to create the buildout.

[buildout]
# We can 'extend' another (could also be mutiple) buildout config file
# We could also supply URLs here to use remote configs
extends = buildout.cfg

offline = true

develop = 

# buildout lets you use +=, -= operations to add or remove things
# from the buildout config you're extending.
# BAN - except in 1.4.1 it doesn't work...
#parts -= licenses pylint wingsetup sphinxbuild
#parts += eggbundler

parts = rec
        app
        mod2egg
        eggbundler


[eggbundler]
recipe = openmdao.recipes:eggbundler

# specify the overall version of the bundle
bundle_name = OpenMDAO
bundle_version = 0.1
readme = README.bundle


# Specify list of distribs needed for this buildout. 
eggs = ${app:eggs}

# Put names of parts you want to be excluded from the bundled buildout.cfg here
exclude_parts = eggbundler

# If this is true, hardwire the buildout to the specific versions that
# we're using. This should normally be true unless you like to live
# dangerously.
pin_versions = true

# Specify files and/or directories to copy to the bundle.
# You can specify a destination directory stucture on the right side
# of the '=' if you need to. Otherwise, you just get a file or directory
# in the top level of the archive with the given basename of the path
# you provide.
extra_data = ../docs/_build/html
             setup=buildout/setup
#             ../contrib/m4=contrib/m4

## set this to false if you don't want to create the tar file, but
## just want to look at the generated bundle for debugging purposes
archive = false


# because the parts += and parts -= functionality doesn't work,
# we have to set parts explicitly and then null out the recipe
# field of any parts that we got rid of from the base config

[sphinxbuild]
recipe =

[pylint]
recipe =

[wingsetup]
recipe =

[licenses]
recipe =
